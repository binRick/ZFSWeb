{
  "name": "terminal-menu",
  "version": "2.1.1",
  "description": "retro ansi terminal menus for serious 80s technicolor business",
  "main": "index.js",
  "dependencies": {
    "charm": "~0.1.2",
    "duplexer2": "0.0.2",
    "inherits": "~2.0.0",
    "resumer": "~0.0.0",
    "through2": "^0.6.3",
    "visualwidth": "~0.0.1"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/terminal-menu.git"
  },
  "homepage": "https://github.com/substack/terminal-menu",
  "keywords": [
    "menu",
    "terminal",
    "ansi",
    "80s",
    "ibm"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# terminal-menu\n\nretro ansi terminal menus for serious 80s technicolor business\n\n![terminal menu](http://substack.net/images/screenshots/terminal_menu.png)\n\n# example\n\n``` js\nvar Menu = require('terminal-menu');\nvar menu = Menu({ width: 29, x: 4, y: 2 });\nmenu.reset();\nmenu.write('SERIOUS BUSINESS TERMINAL\\n');\nmenu.write('-------------------------\\n');\n\nmenu.add('ADD TRANSACTION INVOICE');\nmenu.add('BUSINESS INTELLIGENCE');\nmenu.add('ACCOUNTS PAYABLE');\nmenu.add('LEDGER BOOKINGS');\nmenu.add('INDICATOR CHART METRICS');\nmenu.add('BACKUP DATA TO FLOPPY DISK');\nmenu.add('RESTORE FROM FLOPPY DISK');\nmenu.add('EXIT');\n\nmenu.on('select', function (label) {\n    menu.close();\n    console.log('SELECTED: ' + label);\n});\nprocess.stdin.pipe(menu.createStream()).pipe(process.stdout);\n\nprocess.stdin.setRawMode(true);\nmenu.on('close', function () {\n    process.stdin.setRawMode(false);\n    process.stdin.end();\n});\n```\n\n# methods\n\n``` js\nvar createMenu = require('terminal-menu')\n```\n\n## var menu = createMenu(opts)\n\nCreate a menu with `opts`:\n\n* `opts.width` - menu width in columns\n* `opts.x` - top-left corner x offset, default: 1\n* `opts.y` - top-left corner y offset, default: 1\n* `opts.fg` - foreground color, default: 'white'\n* `opts.bg` - background color, default: 'blue'\n* `opts.padding.left` - left padding in columns\n* `opts.padding.right` - right padding in columns\n* `opts.padding.top` - top padding in rows\n* `opts.padding.bottom` - bottom padding in rows\n* `opts.selected` - set the selected element by its index\n\nThe menu can be driven around with the arrow keys, vi-style j/k, and emacs-style\nC-n/C-p.\n\nTo quit out of the menu, hit `^C` or `q`.\n\n## menu.add(label, cb)\n\nCreate a new selectable menu item with the string `label`.\n\nOptionally give a callback `cb(label, index)` that will fire with the label\nstring and index when selected.\n\n## menu.write(msg)\n\nWrite a message to the menu.\n\n## var stream = menu.createStream()\n\nReturn a duplex `stream` to wire up input and output.\n\n## menu.reset()\n\nReset the terminal, clearing all contents.\n\n## menu.close()\n\nUnregister all listeners and put the terminal back to its original state.\n\n# events\n\n## menu.on('select', function (label, index) {})\n\nWhen the user selects a label, this event fires with the label string and menu\nindex.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install terminal-menu\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/substack/terminal-menu/issues"
  },
  "_id": "terminal-menu@2.1.1",
  "dist": {
    "shasum": "df405f3a10a073a9cbaf85c89a41cf4d2d1d99bd"
  },
  "_from": "terminal-menu@",
  "_resolved": "https://registry.npmjs.org/terminal-menu/-/terminal-menu-2.1.1.tgz"
}
